{"version":3,"file":"static/js/808.06e73968.chunk.js","mappings":"sWAIaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6FAMLE,EAAQF,EAAAA,GAAAA,MAAH,wHAKC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAUN,EAAAA,GAAAA,QAAH,+CACH,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAELE,EAAOP,EAAAA,GAAAA,KAAH,2GACG,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACV,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,OAAnB,IACK,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAY,EAAxB,IACH,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,UAAU,EAAtB,IAGHC,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,uRACC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACI,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMU,MAAR,MAAJ,IASLC,EAAYf,EAAAA,GAAAA,IAAH,uCACX,SAAAG,GAAC,OAAIA,EAAEC,MAAMI,OAAOQ,KAAnB,IAGCC,EAASjB,EAAAA,GAAAA,OAAH,oTACG,SAAAG,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,OAAnB,IACZ,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,OAAOU,UAAnB,IACO,SAAAf,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAOI,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAOW,MAAnB,IACZ,SAAAhB,GAAC,OAAIA,EAAEC,MAAMI,OAAOY,MAAnB,G,kICzCRC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,WACnCI,SAAUP,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,WAEtCK,gBAAiBR,EAAAA,KAEdS,MAAM,CAACT,EAAAA,GAAQ,YAAa,MAAO,wBACnCG,SAAS,0CAGRO,EAAgB,CACpBR,KAAM,GACNK,SAAU,GACVC,gBAAiB,GACjBJ,MAAO,IAGIO,EAAe,WAC1B,IAAMC,GAAUC,EAAAA,EAAAA,eAehB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEH,cAAeA,EACfI,SAlBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAGxBC,EAAU,CACdf,KAHgCa,EAA1Bb,KAINE,MAJgCW,EAApBX,MAKZG,SALgCQ,EAAbR,UAQrBK,GAAQM,EAAAA,EAAAA,IAASD,IAEjBD,GACD,EAOKG,iBAAkBpB,EAHpB,UAKE,UAAC,KAAD,CAAOqB,aAAa,MAApB,WACE,UAAC,KAAD,CAAOC,QAAQ,QAAf,WACE,SAAC,KAAD,oBADF,KACqB,SAAC,KAAD,CAAOC,KAAK,OAAOpB,KAAK,UAC3C,SAAC,KAAD,WACE,SAAC,KAAD,CAAcA,KAAK,eAGvB,UAAC,KAAD,CAAOmB,QAAQ,QAAf,WACE,SAAC,KAAD,oBADF,KACqB,SAAC,KAAD,CAAOC,KAAK,OAAOpB,KAAK,WAC3C,SAAC,KAAD,WACE,SAAC,KAAD,CAAcA,KAAK,gBAGvB,UAAC,KAAD,CAAOmB,QAAQ,WAAf,WACE,SAAC,KAAD,uBADF,KACwB,SAAC,KAAD,CAAOC,KAAK,WAAWpB,KAAK,cAClD,SAAC,KAAD,WACE,SAAC,KAAD,CAAcA,KAAK,mBAGvB,UAAC,KAAD,CAAOmB,QAAQ,WAAf,WACE,SAAC,KAAD,gCACA,SAAC,KAAD,CAAOC,KAAK,WAAWpB,KAAK,qBAC5B,SAAC,KAAD,WACE,SAAC,KAAD,CAAcA,KAAK,0BAIvB,SAAC,KAAD,CAAQoB,KAAK,SAAb,0BAKT,ECnFD,EAJiB,WACf,OAAO,SAACX,EAAD,GACR,C","sources":["components/form/registrationForm/registration.styled.jsx","components/form/registrationForm/registerationForm.js","page/register.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Section = styled.section`\n  padding-top: ${p => p.theme.space[4]}px;\n`;\nexport const Span = styled.span`\n  padding-bottom: ${p => p.theme.space[1]}px;\n  color: ${p => p.theme.colors.registr};\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: ${p => p.theme.fontSizes[2]}px;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[1]}px;\n  padding-left: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  font-family: ${p => p.theme.fonts['Roboto']}px;\n\n  border: 1px solid rgba(33, 33, 33, 0.2);\n\n  box-sizing: border-box;\n  box-shadow: 0 0 6px rgba(33, 33, 33, 0.2);\n  outline: none;\n`;\n\nexport const ErroStyle = styled.div`\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const Button = styled.button`\n  background-color: ${p => p.theme.colors.registr};\n  color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.space[2]}px;\n  padding: 8px;\n  padding-right: 16px;\n  padding-left: 16px;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.colors.header};\n    color: ${p => p.theme.colors.active};\n    transition: cubic-bezier(0.075, 0.82, 0.165, 1);\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\n\nimport { register } from 'redux/Authorization/operations';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\n\nimport {\n  Label,\n  Forma,\n  Section,\n  Span,\n  Input,\n  ErroStyle,\n  Button,\n} from './registration.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().min(6).max(30).required(),\n  password: yup.string().min(6).max(16).required(),\n\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('confirm password is a required field'),\n});\n\nconst initialValues = {\n  name: '',\n  password: '',\n  confirmPassword: '',\n  email: '',\n};\n\nexport const Registration = () => {\n  const dispath = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n\n    dispath(register(newUser));\n\n    resetForm();\n  };\n\n  return (\n    <Section>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma autoComplete=\"off\">\n          <Label htmlFor=\"login\">\n            <Span>Login</Span> <Input type=\"text\" name=\"name\" />\n            <ErroStyle>\n              <ErrorMessage name=\"name\" />\n            </ErroStyle>\n          </Label>\n          <Label htmlFor=\"email\">\n            <Span>Email</Span> <Input type=\"text\" name=\"email\" />\n            <ErroStyle>\n              <ErrorMessage name=\"email\" />\n            </ErroStyle>\n          </Label>\n          <Label htmlFor=\"password\">\n            <Span>Password</Span> <Input type=\"password\" name=\"password\" />\n            <ErroStyle>\n              <ErrorMessage name=\"password\" />\n            </ErroStyle>\n          </Label>\n          <Label htmlFor=\"password\">\n            <Span>Confirm password</Span>\n            <Input type=\"password\" name=\"confirmPassword\" />\n            <ErroStyle>\n              <ErrorMessage name=\"confirmPassword\" />\n            </ErroStyle>\n          </Label>\n\n          <Button type=\"submit\">Submit</Button>\n        </Forma>\n      </Formik>\n    </Section>\n  );\n};\n","import { Registration } from 'components/form/registrationForm/registerationForm';\n\nconst Register = () => {\n  return <Registration />;\n};\n\nexport default Register;\n"],"names":["Forma","styled","Form","Label","p","theme","space","Section","Span","colors","registr","fontWeights","fontSizes","Input","Field","fonts","ErroStyle","error","Button","background","header","active","schema","yup","shape","name","required","email","min","max","password","confirmPassword","oneOf","initialValues","Registration","dispath","useDispatch","onSubmit","values","resetForm","newUser","register","validationSchema","autoComplete","htmlFor","type"],"sourceRoot":""}