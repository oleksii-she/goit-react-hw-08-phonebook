{"version":3,"file":"static/js/486.1aad9b2f.chunk.js","mappings":"kOAEaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iGAMLE,EAAQF,EAAAA,GAAAA,MAAH,0HAIC,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,G,8GCPdC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,WACtCI,gBAAiBP,EAAAA,KAEdQ,MAAM,CAACR,EAAAA,GAAQ,YAAa,MAAO,0BAGlCS,EAAgB,CACpBP,MAAO,GACPE,SAAU,IAGCM,EAAY,WAYvB,OACE,SAAC,KAAD,CACED,cAAeA,EACfE,SAdiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAGxBC,EAAU,CACdZ,MAH0BU,EAApBV,MAINE,SAJ0BQ,EAAbR,UAMfW,QAAQC,IAAIF,GACZD,GACD,EAMGI,iBAAkBlB,EAHpB,UAKE,UAAC,IAAD,CAAOmB,aAAa,MAApB,WACE,UAAC,IAAD,CAAOC,QAAQ,QAAf,WACE,oCADF,KACqB,SAAC,KAAD,CAAOC,KAAK,OAAOC,KAAK,WAC3C,SAAC,KAAD,CAAcA,KAAK,cAErB,UAAC,IAAD,CAAOF,QAAQ,WAAf,WACE,uCADF,KACwB,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,cAClD,SAAC,KAAD,CAAcA,KAAK,iBAErB,UAAC,IAAD,CAAOF,QAAQ,WAAf,WACE,uCADF,KACwB,SAAC,KAAD,CAAOC,KAAK,WAAWC,KAAK,qBAClD,SAAC,KAAD,CAAcA,KAAK,wBAGrB,mBAAQD,KAAK,SAAb,wBAIP,ECjDD,EAHc,WACZ,OAAO,SAACV,EAAD,GACR,C","sources":["components/form/registrationForm/registration.styled.jsx","components/form/login/login.jsx","page/login.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { Label, Forma } from '../registrationForm/registration.styled';\n\nconst schema = yup.object().shape({\n  login: yup.string().required(),\n  password: yup.string().min(6).max(16).required(),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst initialValues = {\n  login: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    const { login, password } = values;\n\n    const newUser = {\n      login,\n      password,\n    };\n    console.log(newUser);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Forma autoComplete=\"off\">\n        <Label htmlFor=\"login\">\n          <span>Login</span> <Field type=\"text\" name=\"login\" />\n          <ErrorMessage name=\"login\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          <span>Password</span> <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          <span>Password</span> <Field type=\"password\" name=\"confirmPassword\" />\n          <ErrorMessage name=\"confirmPassword\" />\n        </Label>\n\n        <button type=\"submit\">Submit</button>\n      </Forma>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/form/login/login';\n\nconst Login = () => {\n  return <LoginForm />;\n};\nexport default Login;\n"],"names":["Forma","styled","Form","Label","p","theme","space","schema","yup","shape","login","required","password","min","max","confirmPassword","oneOf","initialValues","LoginForm","onSubmit","values","resetForm","newUser","console","log","validationSchema","autoComplete","htmlFor","type","name"],"sourceRoot":""}